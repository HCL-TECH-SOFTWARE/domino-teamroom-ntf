---
class: 512
flags: 0x0000
unid: OF50E2A372CC5571FD-ON006B16E5802577C2
items:
  - name: $AssistAction
    type: action
    code_type: 65413
    data: |
      '++LotusScript Development Environment:2:5:(Options):0:74
      ' Â© Copyright HCL Technologies. 2019
      Option Public
      
      '++LotusScript Development Environment:2:5:(Forward):0:1
      Declare Sub Initialize
      Declare Public Function QuickSort(sArray As Variant)
      Declare Sub DoInsertSort ( sA() As String, Byval bottom As Long, Byval top As Long )	
      Declare Sub DoQS( sA() As String, bottom As Long, top As Long )
      
      '++LotusScript Development Environment:2:5:(Declarations):0:10
      Dim SortedArray As Variant
      
      '++LotusScript Development Environment:2:2:Initialize:1:10
      Sub Initialize
      	Dim db As NotesDatabase
      	Dim doc As NotesDocument
      	Dim uidoc As notesuidocument
      	Dim flag As String
      	Dim w As New NotesUIWorkspace 
      	Dim s As New NotesSession
      	Set db = s.CurrentDatabase
      	Set uidoc=w.currentdocument
      	Set doc = uidoc.document
      	
      	On Error Resume Next
      	'Because canonical names are used in combination with flat names
      	'we need to abbreviate the list coming in to do the sort correctly.
      	'otherwise, the sort would be off because canonical names internally all start with CN=
      	'which causes a flat name to sort before a canonical one even if the first letter of the common name
      	'comes before the first letter of the flat name.  To insure correct return values, we canonicalize before
      	'we save the note.  We use Evaluate because it is faster to run the @Name on the list then looping 
      	'through all possible members and abbreviating them in script.
      	Set dbprofile = db.getprofiledocument("tempvars")
      	getSortField = dbprofile.sort
      	
      '	FieldList=Evaluate(|@Name([Abbreviate];Members)|,doc)
      	FieldList = doc.getitemvalue(getSortField(0))
      	Call QuickSort(FieldList)
      	Call doc.ReplaceItemValue(getSortField(0),SortedArray)
      '	Call doc.ReplaceItemValue(getSortField(0), Evaluate(|@Name([Canonicalize];Members)|,doc))
      	Call uidoc.refresh
      	
      End Sub
      
      '++LotusScript Development Environment:2:1:QuickSort:1:8
      Public Function QuickSort(sArray As Variant)
      	Dim sA() As String    
      	Dim j As Long
      	Dim bottom As Long
      	Dim top As Long
      	bottom = Lbound ( sArray )
      	top = Ubound ( sArray )
      	Redim sA( bottom To top ) As String     
      	For j = bottom To top
      		sA ( j ) = sArray ( j )
      	Next
           ' DoQS does a QuickSort if the Sublist is longer than 10 elements
           ' Thus, when DoQS finishes, all elements are within 10 spots of their correct location.
           ' For lists that are close to being in order, an Insertion Sort is much faster than a QuickSort, so we
           ' run through the whole thing once doing an Insertion Sort to finish tidying up the order.
      	Call DoQS( sA, bottom, top )
      	Call DoInsertSort ( sA, bottom, top )
      	SortedArray = sA
      End Function
      
      
      '++LotusScript Development Environment:2:2:DoInsertSort:1:8
      Sub DoInsertSort ( sA() As String, Byval bottom As Long, Byval top As Long )	
      	Dim i As Long
      	Dim x As Long
      	Dim v As String
      	Dim Found As Integer
      	For i = bottom+1 To top
      		x = i
      		v = sA (i )
      		Do While (sA(x-1) > v)
      			sA ( x ) = sA ( x-1 )
      			x = x - 1
      			If x=0 Then
      				Exit Do
      			End If
      		Loop
      		sA (x) = v
      	Next
      End Sub
      
      '++LotusScript Development Environment:2:2:DoQS:1:8
      Sub DoQS( sA() As String, bottom As Long, top As Long )
           ' Called by QuickSort
           ' Uses Public variable sA  (array of string)
      	Dim length As Long
      	Dim i As Long
      	Dim j As Long
      	Dim Pivot As Long
      	Dim PivotValue As String
      	Dim t As String
      	Dim LastSmall As Long
      	length = top - bottom + 1
      	
           ' Only do the QuickSort if the sublist is at least 10 items long
      	If length > 10 Then
                ' Pivot is chosen approx. halfway through sublist.
                ' This gives us best speed if list is almost sorted already, and is no worse than any
                ' other choice if the list is in random order.
      		Pivot = bottom + (length \ 2)   
      		
                ' Move PivotValue out of the way
      		PivotValue = sA( Pivot )
      		sA ( Pivot ) = sA ( bottom )
      		sA ( bottom ) = PivotValue
      		
                ' LastSmall is the location of the last value smaller than PivotValue
      		LastSmall = bottom
      		For i = bottom + 1 To top 
      			If sA ( i ) < PivotValue Then 
      				LastSmall = LastSmall + 1
      				t = sA ( i )
      				sA ( i ) = sA ( LastSmall )
      				sA ( LastSmall ) = t
      			End If
      		Next
      		
                ' Move the PivotValue back
      		t = sA ( LastSmall )
      		sA ( LastSmall ) = sA ( bottom )
      		sA ( bottom ) = t
      		Pivot = LastSmall
      		
                ' Now sort each side
      		Call DoQS ( sA, bottom, Pivot - 1 )
      		Call DoQS ( sA, Pivot + 1, top )
      	End If
      	
      End Sub
    dwFlags: 0x00000000
    signed: true
    nonsummary: true
  - name: $AssistDocCount
    type: number
    data: 0
    signed: true
  - name: $AssistFlags
    type: text
    data: EHs
    signed: true
  - name: $AssistInfo
    type_num: 17
    type: opaque
    opaque: |
      AQAEAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    signed: true
    nonsummary: true
  - name: $AssistLastRun
    type: time
    signed: true
  - name: $AssistQuery
    type_num: 15
    type: opaque
    opaque: gQYAAAAA
    signed: true
    nonsummary: true
  - name: $AssistRunInfo
    type: object
    obj_type: 0x0008
    obj_class: 0x0200
    obj_privs: 0x0000
    opaque: |
      AAAAAAUAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      MDNiAA6EJYZoy2AADoQlhgAAAAAAAAAAAAAAAAAAAAAAAAAAqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
      qqqqqqqqqqqqqqqq
  - name: $AssistTrigger
    type: text
    data: "4"
    signed: true
  - name: $AssistType
    type: number
    data: 65413
    signed: true
  - name: $DesignerVersion
    type: text
    data: 8.5.3
    signed: true
  - name: $Flags
    type: text
    data: fL3
  - name: $FlagsExt
    type: text
    data: ""
    signed: true
  - name: $LANGUAGE
    type: text
    data: en
    signed: true
  - name: $Restricted
    type: number
    data: 1
    signed: true
  - name: $TITLE
    type: text
    data: (QuickSort)
    signed: true
remaining: []